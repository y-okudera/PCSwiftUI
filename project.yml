# https://github.com/yonaskolb/XcodeGen/blob/master/Docs/ProjectSpec.md

# プロジェクト名（PCSwiftUI）で検索して、適切なプロジェクト名に置換する

# プロジェクト全体の設定
name: PCSwiftUI
fileGroups: [PCSwiftUI]
configs:
  Debug: debug
  Release: release
configFiles:
  Debug: configs/Debug.xcconfig
  Release: configs/Release.xcconfig
options:
  minimumXcodeGenVersion: "2.25.0"
  usesTabs: false
  indentWidth: 2
  tabWidth: 2
  deploymentTarget:
    iOS: "14.0"
  developmentLanguage: ja
attributes:
  ORGANIZATIONNAME: "yuoku"
packages: # SwiftPMで扱うPackageを最初に定義
  swift-composable-architecture:
    url: https://github.com/pointfreeco/swift-composable-architecture
    exactVersion: 0.31.0
  Realm:
    url: https://github.com/realm/realm-cocoa
    exactVersion: 10.20.2
  Kingfisher:
    url: https://github.com/onevcat/Kingfisher
    exactVersion: 7.1.2
  SkeletonUI:
    url: https://github.com/CSolanaM/SkeletonUI
    exactVersion: 1.0.7
  Lottie:
    url: https://github.com/airbnb/lottie-ios
    exactVersion: 3.3.0

####################

# ビルドターゲット
targets:
  # AppMainターゲット
  PCSwiftUI:
    type: application
    platform: iOS
    configFiles:
      Debug: configs/Debug.xcconfig
      Release: configs/Release.xcconfig
    sources:
      - path: PCSwiftUI
        excludes:
          - "**/.gitkeep"
          - "**/*.md"
    dependencies:
      - package: swift-composable-architecture
        product: ComposableArchitecture
      - package: Realm
        product: Realm
      - package: Realm
        product: RealmSwift
      - package: Kingfisher
        product: Kingfisher
      - package: SkeletonUI
        product: SkeletonUI
      - package: Lottie
        product: Lottie
    postCompileScripts:
      - path: ./scripts/format.sh
        name: format
      - path: ./scripts/lint.sh
        name: lint
####################
  # UITestターゲット
  PCSwiftUITests:
    type: bundle.unit-test
    platform: iOS
    settings:
      ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES: YES
      BUNDLE_NAME: 'PCSwiftUI.tests'
      configs:
        Debug:
          VALIDATE_WORKSPACE: YES
    sources:
      - PCSwiftUITests
    dependencies:
      - target: PCSwiftUI
#####################
  # UITestターゲット
  PCSwiftUIUITests:
    type: bundle.ui-testing
    platform: iOS
    settings:
      ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES: YES
      BUNDLE_NAME: 'PCSwiftUI.uitests'
    sources: PCSwiftUIUITests
    dependencies:
      - target: PCSwiftUI

#####################

# スキーム定義
schemeTemplates:
  PCSwiftUIScheme:
    build:
      targets:
        PCSwiftUI: all
        PCSwiftUIUITests: [test]
    run:
      config: ${debugConfig}
    test:
      config: ${debugConfig}
      targets:
        - PCSwiftUITests
        - PCSwiftUIUITests
    profile:
      config: ${releaseConfig}
    analyze:
      config: ${debugConfig}
    archive:
      config: ${releaseConfig}
schemes:
  PCSwiftUI:
    templates: [PCSwiftUIScheme]
    templateAttributes:
      debugConfig: Debug
      releaseConfig: Release
